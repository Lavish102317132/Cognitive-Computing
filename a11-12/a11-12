import cv2
import pytesseract
import numpy as np
from keras.models import load_model

# Optional: Uncomment and set path if using Windows
# pytesseract.pytesseract.tesseract_cmd = r'C:\Program Files\Tesseract-OCR\tesseract.exe'

# Load models and resources
face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')
emotion_model = load_model("emotion_model.h5")  # You need to train or download a FER model
emotion_labels = ['Angry', 'Disgust', 'Fear', 'Happy', 'Sad', 'Surprise', 'Neutral']

# --- Feature 1: OCR for medicine label ---
def read_medicine_label(image_path):
    image = cv2.imread(image_path)
    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
    gray = cv2.GaussianBlur(gray, (3, 3), 0)
    text = pytesseract.image_to_string(gray)
    print("\n--- Medicine Label Text ---\n", text)

# --- Feature 2: Emotion-aware Assistant ---
def detect_emotion():
    cap = cv2.VideoCapture(0)
    print("\n[Press 'q' to exit Emotion Detection]\n")

    while True:
        _, frame = cap.read()
        gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
        faces = face_cascade.detectMultiScale(gray, 1.3, 5)

        for (x, y, w, h) in faces:
            roi = gray[y:y+h, x:x+w]
            roi = cv2.resize(roi, (48, 48))
            roi = roi.astype("float") / 255.0
            roi = np.expand_dims(roi, axis=0)
            roi = np.expand_dims(roi, axis=-1)

            prediction = emotion_model.predict(roi)[0]
            label = emotion_labels[np.argmax(prediction)]

            cv2.rectangle(frame, (x, y), (x+w, y+h), (0, 255, 0), 2)
            cv2.putText(frame, label, (x, y-10), cv2.FONT_HERSHEY_SIMPLEX, 0.9, (255, 255, 255), 2)

        cv2.imshow("Emotion Detection", frame)
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break

    cap.release()
    cv2.destroyAllWindows()

# --- Feature 3: Healthcare Chatbot ---
def healthbot():
    responses = {
        "hi": "Hello! I am HealthBot. How can I assist you today?",
        "i have a headache": "You should rest, stay hydrated, and take a mild pain reliever if needed.",
        "what should i do if i have a fever?": "Drink plenty of fluids and rest. If the fever persists, please consult a doctor.",
        "i feel dizzy": "Sit down, breathe deeply, and drink water. If it continues, seek medical help.",
        "what should i eat for a cold?": "Warm fluids, soups, citrus fruits, and light meals help during a cold.",
        "how to stay healthy?": "Eat balanced meals, exercise regularly, stay hydrated, and get enough sleep.",
        "what should i do in case of a cut?": "Clean the wound with water, apply antiseptic, and cover it with a clean bandage.",
        "how much water should i drink daily?": "Generally, 2 to 3 liters per day is recommended, but it varies based on your activity.",
        "thank you": "You're welcome! Take care.",
        "bye": "Goodbye! Stay healthy."
    }

    print("\n--- HealthBot Chat ---")
    print("HealthBot: Hello! I am HealthBot. How can I assist you today?")

    while True:
        user_input = input("You: ").lower().strip()
        if user_input in responses:
            print("HealthBot:", responses[user_input])
            if user_input == "bye":
                break
        else:
            print("HealthBot: I'm sorry, I don't understand that. Can you please rephrase?")

# --- Main Menu ---
def main():
    while True:
        print("\n--- Cognitive Assistant Menu ---")
        print("1. Read Medicine Label (OCR)")
        print("2. Emotion Detection Assistant")
        print("3. Healthcare Chatbot")
        print("4. Exit")

        choice = input("Enter your choice (1-4): ")

        if choice == "1":
            path = input("Enter image path of medicine label: ")
            read_medicine_label(path)
        elif choice == "2":
            detect_emotion()
        elif choice == "3":
            healthbot()
        elif choice == "4":
            print("Exiting. Stay healthy!")
            break
        else:
            print("Invalid choice. Try again.")

if __name__ == "__main__":
    main()
